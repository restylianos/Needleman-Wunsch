[{"C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\bioinformatics\\src\\index.js":"1","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\bioinformatics\\src\\components\\App.js":"2","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\bioinformatics\\src\\components\\Needleman.js":"3","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\index.js":"4","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\components\\App.js":"5","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\components\\Needleman.js":"6","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\components\\Smith.js":"7","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\components\\Footer.js":"8"},{"size":208,"mtime":1610124631569,"results":"9","hashOfConfig":"10"},{"size":3689,"mtime":1610922553931,"results":"11","hashOfConfig":"10"},{"size":2932,"mtime":1610931780369,"results":"12","hashOfConfig":"10"},{"size":208,"mtime":1610124631569,"results":"13","hashOfConfig":"14"},{"size":6911,"mtime":1611315856394,"results":"15","hashOfConfig":"14"},{"size":2999,"mtime":1611276387225,"results":"16","hashOfConfig":"14"},{"size":2486,"mtime":1611310400104,"results":"17","hashOfConfig":"14"},{"size":551,"mtime":1611319399882,"results":"18","hashOfConfig":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1m12y5g",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1yzkxua",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\bioinformatics\\src\\index.js",[],["38","39"],"C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\bioinformatics\\src\\components\\App.js",[],"C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\bioinformatics\\src\\components\\Needleman.js",[],"C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\index.js",[],["40","41"],"C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\components\\App.js",["42","43","44"],"C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\components\\Needleman.js",["45"],"import React, { useEffect } from 'react';\r\n\r\nconst Needleman = ({ first_sequence, second_sequence, gap, sub, match, miss }) => {\r\n  const seq1 = first_sequence;\r\n  const seq2 = second_sequence;\r\n\r\n  var m = seq1.length;\r\n  var n = seq2.length;\r\n\r\n  // array creation\r\n\r\n  var arr = [[]];\r\n\r\n  for (let j = 0; j <= n; j++) arr[0][j] = j * gap;\r\n\r\n  for (let i = 1; i <= m; i++) {\r\n    arr[i] = [i * gap];\r\n\r\n    for (let j = 1; j <= n; j++)\r\n      arr[i][j] = Math.max(\r\n        arr[i - 1][j] + gap,\r\n        arr[i][j - 1] + gap,\r\n        arr[i - 1][j - 1] + (seq1[i - 1] === seq2[j - 1] ? match : sub)\r\n      );\r\n  }\r\n\r\n  // backtracking\r\n\r\n  let out1 = '';\r\n  let out2 = '';\r\n\r\n  while (m > 0 && n > 0) {\r\n    if (arr[m][n] === arr[m - 1][n] + gap) {\r\n      m--;\r\n      out1 = seq1[m] + out1;\r\n      out2 = '-' + out2;\r\n    } else if (arr[m][n] === arr[m][n - 1] + gap) {\r\n      n--;\r\n      out1 = '-' + out1;\r\n      out2 = seq2[n] + out2;\r\n    } else {\r\n      m--;\r\n      n--;\r\n      out1 = seq1[m] + out1;\r\n      out2 = seq2[n] + out2;\r\n    }\r\n  }\r\n\r\n  out1 = seq1.slice(0, m) + new Array(n + 1).join('-') + out1;\r\n  out2 = seq2.slice(0, n) + new Array(m + 1).join('-') + out2;\r\n\r\n  // the (messy) drawing part begins here\r\n  const res_1 = out1;\r\n  const res_2 = out2;\r\n\r\n  const final_seq_1 = seq1.substring(0, 0) + ' ' + seq1.substring(0, seq1.length);\r\n  const final_seq_2 = seq2.substring(0, 0) + '  ' + seq2.substring(0, seq2.length);\r\n\r\n  //fix arrays\r\n  const renderedTitles_x = [...final_seq_2].map((amino, index) => {\r\n    return (\r\n      <th key={index}>\r\n        <abbr title=\"Position\">{amino}</abbr>\r\n      </th>\r\n    );\r\n  });\r\n  console.log(final_seq_1);\r\n\r\n  const renderedResults = arr.map((row, index) => {\r\n    const res = row.map((item, secondIndex) => {\r\n      return <td key={secondIndex}>{item}</td>;\r\n    });\r\n\r\n    const renderedTtitles_y = [...final_seq_1].map((amino, aminoIndex) => {\r\n      //console.log(amino);\r\n      return <th key={aminoIndex + 20}>{amino}</th>;\r\n    });\r\n\r\n    return (\r\n      <tr key={index}>\r\n        <th>{renderedTtitles_y[index].props.children}</th>\r\n        {res}\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <h3 className=\"title is-3 has-text-centered\">Needleman-Wunsch</h3>\r\n      <div className=\"column\">\r\n        <div className=\"table-container\">\r\n          <table\r\n            className=\"table is-bordered is-hoverable\"\r\n            style={{ marginLeft: 'auto', marginRight: 'auto' }}\r\n          >\r\n            <thead>\r\n              <tr>{renderedTitles_x}</tr>\r\n            </thead>\r\n            <tbody>{renderedResults}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"has-text-centered\">\r\n        <h4 className=\"has-text-centered title is-4\">Alignment</h4>\r\n        <h5 className=\"title is-5 has-text-centered\">{res_1}</h5>\r\n        <h5 className=\"title is-5 has-text-centered\">{res_2}</h5>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Needleman;\r\n","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\components\\Smith.js",[],"C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\components\\Footer.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":23},{"ruleId":"52","severity":1,"message":"56","line":4,"column":25,"nodeType":"54","messageId":"55","endLine":4,"endColumn":29},{"ruleId":"52","severity":1,"message":"57","line":4,"column":31,"nodeType":"54","messageId":"55","endLine":4,"endColumn":36},{"ruleId":"52","severity":1,"message":"58","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],["59"],["60"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Route' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]