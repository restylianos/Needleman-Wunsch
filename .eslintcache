[{"C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\bioinformatics\\src\\index.js":"1","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\bioinformatics\\src\\components\\App.js":"2","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\bioinformatics\\src\\components\\Needleman.js":"3","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\index.js":"4","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\components\\App.js":"5","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\components\\Needleman.js":"6","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\components\\Smith.js":"7"},{"size":208,"mtime":1610124631569,"results":"8","hashOfConfig":"9"},{"size":3689,"mtime":1610922553931,"results":"10","hashOfConfig":"9"},{"size":2932,"mtime":1610931780369,"results":"11","hashOfConfig":"9"},{"size":208,"mtime":1610124631569,"results":"12","hashOfConfig":"13"},{"size":4031,"mtime":1611276494876,"results":"14","hashOfConfig":"13"},{"size":2999,"mtime":1611276387225,"results":"15","hashOfConfig":"13"},{"size":2486,"mtime":1611310400104,"results":"16","hashOfConfig":"13"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1m12y5g",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1yzkxua",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\bioinformatics\\src\\index.js",[],["35","36"],"C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\bioinformatics\\src\\components\\App.js",[],"C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\bioinformatics\\src\\components\\Needleman.js",[],"C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\index.js",[],["37","38"],"C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\components\\App.js",["39","40","41"],"import React, { useState } from 'react';\r\nimport '../../node_modules/bulma/css/bulma.css';\r\nimport Needleman from './Needleman';\r\nimport { BrowserRouter, Link, Route } from 'react-router-dom';\r\nimport Smith from './Smith';\r\n\r\nconst App = () => {\r\n  const [firstSequence, setFirstSequence] = useState('');\r\n  const [secondSequence, setSecondSequence] = useState('');\r\n  const [gap, setGap] = useState(-8);\r\n  const [match, setMatch] = useState(15);\r\n  const [sub, setSub] = useState(-3);\r\n\r\n  const updateFirstFreq = (e) => {\r\n    setFirstSequence(e.target.value);\r\n  };\r\n\r\n  const updateSecondFreq = (e) => {\r\n    setSecondSequence(e.target.value);\r\n  };\r\n\r\n  const updateUserGap = (e) => {\r\n    setGap(e.target.value);\r\n  };\r\n\r\n  const updateUserMatch = (e) => {\r\n    setMatch(e.target.value);\r\n  };\r\n\r\n  const updateUserSub = (e) => {\r\n    setSub(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"has-text-centered\">\r\n        <h1 className=\"title is-1\"> Sequence Alignment</h1>\r\n        <h6 className=\"subtitle is-6\">v 1.0.1 </h6>\r\n      </div>\r\n\r\n      <div className=\"box\">\r\n        <div className=\"field\">\r\n          <label className=\"label\">First sequence</label>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              placeholder=\"AATT\"\r\n              onChange={(e) => updateFirstFreq(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label className=\"label\">Second sequence</label>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              placeholder=\"ATCT\"\r\n              onChange={(e) => updateSecondFreq(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"columns\">\r\n          <div className=\"column\">\r\n            <div className=\"field\">\r\n              <label className=\"label has-text-centered\">Match</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Default value is 15\"\r\n                  onChange={(e) => updateUserMatch(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"column\">\r\n            <div className=\"field\">\r\n              <label className=\"label has-text-centered\">Sub</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Default value is -3\"\r\n                  onChange={(e) => updateUserSub(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"column\">\r\n            <div className=\"field\">\r\n              <label className=\"label has-text-centered\">Gap</label>\r\n              <div className=\"control\">\r\n                <input\r\n                  className=\"input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Default value is -8\"\r\n                  onChange={(e) => updateUserGap(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {firstSequence && secondSequence && (\r\n          <div className=\"columns is-fullheight\">\r\n            <div className=\"column\">\r\n              <Needleman\r\n                first_sequence={firstSequence}\r\n                second_sequence={secondSequence}\r\n                gap={gap}\r\n                sub={sub}\r\n                match={match}\r\n              ></Needleman>\r\n            </div>\r\n            <div className=\"column\">\r\n              <Smith\r\n                first_sequence={firstSequence}\r\n                second_sequence={secondSequence}\r\n                gap={gap}\r\n                sub={sub}\r\n                match={match}\r\n              ></Smith>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\components\\Needleman.js",["42"],"import React, { useEffect } from 'react';\r\n\r\nconst Needleman = ({ first_sequence, second_sequence, gap, sub, match, miss }) => {\r\n  const seq1 = first_sequence;\r\n  const seq2 = second_sequence;\r\n\r\n  var m = seq1.length;\r\n  var n = seq2.length;\r\n\r\n  // array creation\r\n\r\n  var arr = [[]];\r\n\r\n  for (let j = 0; j <= n; j++) arr[0][j] = j * gap;\r\n\r\n  for (let i = 1; i <= m; i++) {\r\n    arr[i] = [i * gap];\r\n\r\n    for (let j = 1; j <= n; j++)\r\n      arr[i][j] = Math.max(\r\n        arr[i - 1][j] + gap,\r\n        arr[i][j - 1] + gap,\r\n        arr[i - 1][j - 1] + (seq1[i - 1] === seq2[j - 1] ? match : sub)\r\n      );\r\n  }\r\n\r\n  // backtracking\r\n\r\n  let out1 = '';\r\n  let out2 = '';\r\n\r\n  while (m > 0 && n > 0) {\r\n    if (arr[m][n] === arr[m - 1][n] + gap) {\r\n      m--;\r\n      out1 = seq1[m] + out1;\r\n      out2 = '-' + out2;\r\n    } else if (arr[m][n] === arr[m][n - 1] + gap) {\r\n      n--;\r\n      out1 = '-' + out1;\r\n      out2 = seq2[n] + out2;\r\n    } else {\r\n      m--;\r\n      n--;\r\n      out1 = seq1[m] + out1;\r\n      out2 = seq2[n] + out2;\r\n    }\r\n  }\r\n\r\n  out1 = seq1.slice(0, m) + new Array(n + 1).join('-') + out1;\r\n  out2 = seq2.slice(0, n) + new Array(m + 1).join('-') + out2;\r\n\r\n  // the (messy) drawing part begins here\r\n  const res_1 = out1;\r\n  const res_2 = out2;\r\n\r\n  const final_seq_1 = seq1.substring(0, 0) + ' ' + seq1.substring(0, seq1.length);\r\n  const final_seq_2 = seq2.substring(0, 0) + '  ' + seq2.substring(0, seq2.length);\r\n\r\n  //fix arrays\r\n  const renderedTitles_x = [...final_seq_2].map((amino, index) => {\r\n    return (\r\n      <th key={index}>\r\n        <abbr title=\"Position\">{amino}</abbr>\r\n      </th>\r\n    );\r\n  });\r\n  console.log(final_seq_1);\r\n\r\n  const renderedResults = arr.map((row, index) => {\r\n    const res = row.map((item, secondIndex) => {\r\n      return <td key={secondIndex}>{item}</td>;\r\n    });\r\n\r\n    const renderedTtitles_y = [...final_seq_1].map((amino, aminoIndex) => {\r\n      //console.log(amino);\r\n      return <th key={aminoIndex + 20}>{amino}</th>;\r\n    });\r\n\r\n    return (\r\n      <tr key={index}>\r\n        <th>{renderedTtitles_y[index].props.children}</th>\r\n        {res}\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      <h3 className=\"title is-3 has-text-centered\">Needleman-Wunsch</h3>\r\n      <div className=\"column\">\r\n        <div className=\"table-container\">\r\n          <table\r\n            className=\"table is-bordered is-hoverable\"\r\n            style={{ marginLeft: 'auto', marginRight: 'auto' }}\r\n          >\r\n            <thead>\r\n              <tr>{renderedTitles_x}</tr>\r\n            </thead>\r\n            <tbody>{renderedResults}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"has-text-centered\">\r\n        <h4 className=\"has-text-centered title is-4\">Alignment</h4>\r\n        <h5 className=\"title is-5 has-text-centered\">{res_1}</h5>\r\n        <h5 className=\"title is-5 has-text-centered\">{res_2}</h5>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Needleman;\r\n","C:\\Users\\stelios\\Desktop\\git\\Bioinformatics\\Needleman-Wunsch\\src\\components\\Smith.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"43","replacedBy":"47"},{"ruleId":"45","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":4,"column":10,"nodeType":"51","messageId":"52","endLine":4,"endColumn":23},{"ruleId":"49","severity":1,"message":"53","line":4,"column":25,"nodeType":"51","messageId":"52","endLine":4,"endColumn":29},{"ruleId":"49","severity":1,"message":"54","line":4,"column":31,"nodeType":"51","messageId":"52","endLine":4,"endColumn":36},{"ruleId":"49","severity":1,"message":"55","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":26},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],["56"],["57"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Route' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]